class demo {
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int n =  sc.nextInt();
      int [] arr = new int[n];
      for( int i = 0;i<n;i++){
         arr[i] = sc.nextInt();
      }

      sortBasedOnNearestPrime(arr,n);
 

    }
    static void sortBasedOnNearestPrime(int [] arr,int n){
       int[] nearestPrimesdiff = new int [n];
       for( int i = 0; i<n;i++){
          if(isPrime(arr[i])){
            nearestPrimesdiff[i] = 0;
          }
          else{
            nearestPrimesdiff[i] = Math.min(arr[i] - prevPrime(arr[i]),nextPrime(arr[i])-arr[i]);
          }
       }
       System.out.println(Arrays.toString(nearestPrimesdiff));
       for( int i = 1;i<n;i++){
          int j = i-1;
          while( j>=0 && nearestPrimesdiff[j] >= nearestPrimesdiff[i]){
            if(nearestPrimesdiff[j] == nearestPrimesdiff[i] && arr[i]>arr[j]){
               j--;
               continue;
            }
            int t = arr[i];
            arr[i] = arr[j];
            arr[j] = t;
            j--;
          }
       }
       System.out.println(Arrays.toString(arr));
    }
    static int prevPrime(int x){
      while(!isPrime(--x)) ;
      return x;

    }
    static int nextPrime(int x){
      while(!isPrime(++x));
      return x;
    }
    static boolean isPrime(int x){
      if( x == 0 || x == 1) return false;
      if( x == 2 || x == 3) return true;
      if( x % 2== 0 || x % 3 == 0) return false;
      int j = 5;
      while( j *j <= x){
         if(x%j == 0 || ( x % ( j+2) == 0)){
            return false;
         }
         j+= 6;
      }
      return true;
    }    
}
    
